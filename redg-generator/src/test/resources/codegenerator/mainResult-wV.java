/*
 * This file was generated by RedG.
 * https://btc-redg.github.com/
 *       ____           ________
 *      / __ \___  ____/ / ____/
 *     / /_/ / _ \/ __  / / __
 *    / _, _/  __/ /_/ / /_/ /
 *   /_/ |_|\___/\__,_/\____/
 *
 * DO NOT EDIT MANUALLY!
 * Re-run the code generation to reflect database changes.
 */
package com.btc.redg.generated;

import com.btc.redg.runtime.*;
import com.btc.redg.models.*;
import com.btc.redg.runtime.dummy.DummyFactory;
import com.btc.redg.runtime.visualization.*;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.lang.reflect.Method;
import java.util.*;
import java.util.stream.Collectors;

/**
 * <p>This is the RedG main class. Use it to specify your test data and then insert them into the database.</p>
 * <p>Use this class to customize the RedG runtime options. Use can use the following methods:</p>
 * <ul>
 *   <li>{@link AbstractRedG#setDefaultValueStrategy(DefaultValueStrategy)} to set the default value strategy<li>
 *   <li>{@link AbstractRedG#setDummyFactory(DummyFactory)} to set the dummy factory</li>
 *   <li>{@link AbstractRedG#setPreparedStatementParameterSetter(PreparedStatementParameterSetter)} to set the prepared statement parameter setter</li>
 *   <li>{@link AbstractRedG#setInsertValuesFormatter(InsertValuesFormatter)} to set the insert values formatter</li>
 * </ul>
 */
public class RedG extends AbstractRedG {

    /**
     * Adds a new entity of the type {@link GDemoCompany} to the RedG entities and returns it for further modification.
     *
     * <table summary="The table model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>\"RT-CG-MAIN\".PUBLIC.DEMO_COMPANY</td>
     *     </tr>
     * </table>
     */
    public GDemoCompany addDemoCompany() {
        GDemoCompany obj = new GDemoCompany(this);
        this.addEntity(obj);
        return obj;
    }
    /**
     * Adds a new entity of the type {@link GDemoUser} to the RedG entities and returns it for further modification.
     *
     * <table summary="The table model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_USER</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>\"RT-CG-MAIN\".PUBLIC.DEMO_USER</td>
     *     </tr>
     * </table>
     */
    public GDemoUser addDemoUser(GDemoCompany worksAtDemoCompany) {
        GDemoUser obj = new GDemoUser(this, worksAtDemoCompany);
        this.addEntity(obj);
        return obj;
    }

    /**
     * Creates a new reference to an existing entity of the type {@link GDemoCompany} in the database and returns it. Do not try to modify it or read
     * values other than the primary key(s).
     *
     * <table summary="The table model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>\"RT-CG-MAIN\".PUBLIC.DEMO_COMPANY</td>
     *     </tr>
     * </table>
     */
    public GDemoCompany existingDemoCompany(java.math.BigDecimal id) {
        GDemoCompany obj = new ExistingGDemoCompany(this, id);
        this.addEntity(obj);
        return obj;
    }
    /**
     * Creates a new reference to an existing entity of the type {@link GDemoUser} in the database and returns it. Do not try to modify it or read
     * values other than the primary key(s).
     *
     * <table summary="The table model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_USER</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>\"RT-CG-MAIN\".PUBLIC.DEMO_USER</td>
     *     </tr>
     * </table>
     */
    public GDemoUser existingDemoUser(java.math.BigDecimal id) {
        GDemoUser obj = new ExistingGDemoUser(this, id);
        this.addEntity(obj);
        return obj;
    }

    /**
     * Adds a new dummy entity of the type {@link GDemoCompany} to the RedG entities and returns it. Modifying it might have unexpected results depending
     * on your dummy factory.
     *
     * <table summary="The table model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_COMPANY</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>\"RT-CG-MAIN\".PUBLIC.DEMO_COMPANY</td>
     *     </tr>
     * </table>
     */
    public GDemoCompany dummyDemoCompany() {
        return this.getDummyFactory().getDummy(this, GDemoCompany.class);
    }
    /**
     * Adds a new dummy entity of the type {@link GDemoUser} to the RedG entities and returns it. Modifying it might have unexpected results depending
     * on your dummy factory.
     *
     * <table summary="The table model attributes and their values">
     *     <tr>
     *         <td><strong>Attribute</strong></td>
     *         <td><strong>Value</strong></td>
     *     </tr>
     *     <tr>
     *         <td>Table name</td>
     *         <td>DEMO_USER</td>
     *     </tr>
     *     <tr>
     *         <td>Full table name</td>
     *         <td>\"RT-CG-MAIN\".PUBLIC.DEMO_USER</td>
     *     </tr>
     * </table>
     */
    public GDemoUser dummyDemoUser() {
        return this.getDummyFactory().getDummy(this, GDemoUser.class);
    }


    private List<RedGEntity> dummyEntities = new ArrayList<>();

    public String getVisualizationJson() {
        return VisualizationUtil.getVisualizationJson(this.getEntities(), this.dummyEntities);
    }

    @Override
    public void setDummyFactory(final DummyFactory dummyFactory) {
        super.setDummyFactory(dummyFactory);
        this.getDummyFactory().addDummyPostProcessor(this::processDummy);
    }

    public RedG() {
        super();
        this.getDummyFactory().addDummyPostProcessor(this::processDummy);
    }

    private <T extends RedGEntity> T processDummy(T entity) {
        if(!this.dummyEntities.contains(entity)) {
            this.dummyEntities.add(entity);
        }
        return entity;
    }
}